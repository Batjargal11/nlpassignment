
Сэтгэгдлийн шинжилгээ

Сэтгэгдэл гэдэг нь үзэл бодол, хандлагад суурилсан мэдрэмжийн  илэрхийлэл юм. Зарим эх сурвалжид сэтгэгдэл гэдэг бол сэтгэл хөдлөл, баяр баясал, шаналал, түгшил зэрэгт хүний үзүүлж буй байгалийн хариу үйлдэл гэж тодорхойлсон байдаг. Түүнчлэн сэтгэл хөдлөлийн олон төрлүүд байдаг бөгөөд тэдгээрийг сэтгэл судлаачид хайр, баяр баясгалан, гэнэтийн байдал, уур уцаар, уйтгар гуниг, айдас гэсэн 6 төрөлд хуваан авч үздэг байна. 
Мэдээллийн веб сайтууд болон олон нийтийн сүлжээнд хүмүүс харилцахдаа сэтгэгдэл үлдээж их хэмжээний өгөгдлийг бий болгодог. Сэтгэгдэл нь тухайн мэдээ,  бараа бүтээгдэхүүний мэдээлэл олон хүнд хүрсэн, хүмүүс хэрхэн хүлээж авч байгааг илтгэнэ. Гэвч бүх сэтгэгдлийг уншиж нягтлахаас нааш агуулдгыг нь мэдэх боломжгүй. Харин сэтгэгдлүүдийг задлан шинжилж   агуулгаар нь тодорхой ангиллын хүрээнд ангилж, үнэлж чадвал тухайн мэдээлэлд хүмүүс хэрхэн хандаж байгааг мэдэх боломжтой. Мөн сэтгэгдлийг задлан шинжлэх явцад гарч ирсэн өгөгдлүүдийг цуглуулж, байгууллагын бизнесийн үйл ажиллагааг сайжруулах, нийгмийн сүлжээн дахь сөрөг агуулга бүхий өгөгдлийг хянах, бараа бүтээгдэхүүний талаарх бусдын үзэл бодол, шүүмжлэлийг мэдэх зэрэг өөр бусад зорилгоор ашиглаж болох юм.
  
Сэтгэгдлийн шинжилгээ гэж юу вэ

Сэтгэгдлийн шинжилгээ нь хүмүүсийн үзэл бодол, сэтгэгдэл, үнэлгээ, хандлага, шүүмжлэл, сэтгэл хөдлөл зэргийг текстэн мэдээлэлд шинжилгээ хийж гаргах эх хэлний боловсруулалтын (NLP) судалгааны нэг салбар юм.  Сүүлийн жилүүдэд сэтгэгдлийн шинжилгээ нь нийгэм болон бизнест чухал нөлөө үзүүлж буй учир дан ганц компьютерийн шинжлэх ухааны судлагдахуун бус менежмент болон нийгмийн шинжлэх ухаанд эрчимтэй судлагдаж байна. Интернет орчин дахь бүхий л талбарт сэтгэгдлийн шинжилгээ ашиглагдах боломжтой бөгөөд тухайлбал бараа бүтээгдэхүүн дахь хэрэглэгчдийн үнэлгээ, форум дахь хэлэлцүүлэг,  хувийн блогууд, Twitter, Facebook зэргийн хэрэглэгчдийн бичсэн сэтгэгдлээс текстийн шинжилгээ хийж тодорхойлох боломжтой. 
Сэтгэгдлийн шинжилгээг:
Бизнест: Маркетингийн чиглэлээр ажилладаг компаниуд үүнийг ашиглан стратегиа боловсруулах, бүтээгдэхүүн, брэндийн талаарх хэрэглэгчдийн сэтгэл ханамжийг мэдэх, хүмүүс  бүтээгдэхүүн, үйлчилгээний  нээлтэд хэрхэн ханддаг, зарим бүтээгдэхүүнийг хэрэглэгчид яагаад худалдаж авдаггүйг ойлгоход ашигладаг.

Улс төрд: Улс төрийн талбарт улс төрийн үзэл бодлыг хянах, засгийн газрын түвшинд явуулж буй үйл ажиллагаанууд хүмүүст таалагдаж байгаа эсвэл таалагдахгүй байгааг илрүүлэхэд ашигладаг. Үүнийг мөн сонгуулийн үр дүнг урьдчилан таамаглахад ашиглаж болно.

Олон нийтийг хамарсан  арга хэмжээ: Сэтгэгдлийн шинжилгээг нийгмийн үзэгдлийг хянах, дүн шинжилгээ хийх, болзошгүй аюултай нөхцөл байдлыг илрүүлэх, блог орчны ерөнхий төлөв байдлыг тодорхойлоход ашиглагддаг.

Сэтгэгдлийн шинжилгээний аргад үндэслэн бүтээгдэхүүн, үйлчилгээний хэрэглэгчийн сэтгэл ханамжийг автоматаар тодорхойлсноор уламжлалт асуулгын судалгаа эрс өөрчлөгдөх болсон. Сэтгэгдлийг шинжилгээг автоматаар хийснээр ямар нэг хүн эсвэл бүтээгдэхүүний талаарх хэрэглэгчийн сэтгэл ханамжийг богино хугацаанд, зардал багатай тодорхойлох боломжтой юм. 

Зорилгоос хамааран сэтгэгдлийн шинжилгээний алгоритмуудыг сонгон ашиглана. Сэтгэгдлийн шинжилгээний 3 түвшин байдаг. Үүнд:
	Баримт бичгийн түвшин (Document-level) - текстийг бүхэлд нь
Энэ түвшинд бичиг баримтыг бүхэлд нь "эерэг", "сөрөг" эсвэл "энгийн" гэж ангилж болно. Өөрөөр хэлбэл, өгөгдсөн текстийн хувьд бүхэл бүтэн текст нь нэг объектын талаар эерэг буюу сөрөг үзэл бодлыг илэрхийлдэг гэж үзнэ. Энэ арга нь зөвхөн объект байна гэж үзсэн тул нэгээс илүү объектын харьцуулах эсвэл үнэлэх текстэд тийм ч тохиромжтой нь биш юм.

	Өгүүлбэрийн түвшин(Sentence-level) - нэг өгүүлбэрийн хувьд сэтгэгдлийг тогтоох
Өгүүлбэрт суурилсан арга нь баримт бичгийн аргатай төстэй боловч үндсэн ялгаа нь өгүүлбэр нэг бүрчлэн дүн шинжилгээ хийдэг. Энэ арга нь баримт бичигт суурилсан аргаас илүү уян хатан байдаг. Учир  нь энэ нь объектив өгүүлбэрийг субъектив өгүүлбэрээс ялгаж чаддаг бөгөөд үүнийг эхний тохируулагч болгон ашиглаж болно.
	Дэд өгүүлбэрийн түвшин - өгүүлбэр дэх дэд илэрхийллийн мэдрэмжийг олж авдаг.
Энэ түвшинд өгүүлбэр, баримт бичгийг "эерэг", "сөрөг" эсвэл "саармаг" гэж ангилдаг. Гол ялгаа нь энэхүү дүн шинжилгээ нь өгүүлбэр, баримт бичиг эсвэл догол мөр гэх мэт хэлний нэгжид анхаарлаа төвлөрүүлэхийн оронд үзэл бодол бүрийн зорилтот хэсгийг олж авдаг явдал юм. Энэ түвшний зорилго нь аж ахуйн нэгжүүд болон тэдгээрийн өөр өөр талуудын талаарх санал бодол эсвэл байр суурийг тодорхойлох явдал юм. Бодит цагийн мэдрэмжийн дүн шинжилгээний системийн ихэнх нь энэ түвшинд суурилдаг.

	Сэтгэгдлийн шинжилгээний алгоритмууд 
Сэтгэгдлийн шинжилгээний хоёр үндсэн арга байдаг. Үүнд:
	Дүрэмд суурилсан арга
	Сэтгэгдлийн  автомат шинжилгээний арга

Дүрэмд суурилсан арга (Rule-based approach)

Дүрэмд суурилсан аргад үзэл бодлыг тодорхой тодорхойлсон алгоримт дээр суурилдаг. Энэ арга нь эх хэлний боловсруулалтын үндсэн элементүүдтэй салшгүй холбоотой. Тухайлбал:
	Stemming
	Tokenization
	Part of speech tagging
	Parsing
	Lexicon analysis 
 Хэрхэн ажиллах вэ?
	Нэг нь зөвхөн эерэгийг үгсийг агуулсан, нөгөө нь сөрөг үгсийг агуулсан хоёр жагсаалт байгаа гэе . 
	Алгоритм нь текстээс жагсаалтад байгаа үгсийг олж тоолно.
	Аль төрлийн үг илүү олон  байгааг тооцоолж дүгнэлтийг хийнэ. 

Сэтгэгдлийн  автомат шинжилгээ (Automatic Sentiment Analysis)
Сэтгэгдлийн автомат шинжилгээ нь дараах ангиллын алгоритмуудыг ашигладаг. Үүнд:
	Linear Regression
	Naive Bayes
	Support Vector Machines
	RNN derivatives LSTM and GRU

	Recurrent Neural Networks (RNN)
RNN нь өгөгдлийн дарааллын боловсруулалтанд илүү сайн үр дүн өгдөг нейрон сүлжээний нэг төрөл юм. Текст өгөгдөлтэй үр дүнтэй сайн ажилладаг учир эх хэлний боловосруулалтанд (NLP) ихээхэн ашиглагддаг. Конволюшн нейрон сүлжээний  (Convolutional Neural Networks – CNN) оролт, гаралт нь урьдчилан тодорхойлсон урттай байдаг бол ийн RNN -ийн хувьд оролт, гаралт нь хувьсах урттай байдаг.  
 
Улаан нь оролт, ногоон нь нуугдмал датхарга, цэнхэр нь гаралт 
Зураг 1.  RNN -ний төрлүүд

Дарааллыг боловсруулах боломж нь RNN-ийг маш их хэрэглээтэй болгосон. Жишээ нь:
	Машины орчуулга (жишээ нь Google Translate) "many to  many" RNN аргаар хийгдсэн. 
	Сэтгэгдлийн шинжилгээ (positive or negative ) мөн RNN  "many to one" аргаар хийгддэг байна.

3.1 Хэрхэн ажиллах вэ?

Many to many RNN
x0, x1, . . ., xn оролттой y1, y2, . . . , yn гаралттай RNN -г авч нь үзье.  Энд xi, yi -нь хувьсах урттай хэмжигдэхүүн байна.
 Давталтын t алхамд
	 Далд давхарга  ht -г тооцоолохдоо өмнөх далд давхарга ht-1 болон оролт xt -г ашигладаг.
	Гаралт yt -г тооцоолохдоо ht -г ашиглана.
 
Зураг 2. many to many RNN-ний тооцооллын загвар

RNN -ний тооцоололд гурван төрлийн жин, 2 төрлийн биас(bias) ашигладаг.
	Wxh нь xt → ht 
	Whh нь  ht-1  → ht 
	Why нь ht → yt   бүрийг тооцоолоход ашиглагдана.

    		(1)
(1) томъёогоор далд давхаргын утгыг тооцоолно. 

3.2 RNN ашиглан сэтгэгдлийн шинжилгээ хийх нь 
Өгөгдсөн текст мөр нь эерэг эсвэл сөрөг эсэхийг тодорхойлох энгийн сэтгэгдлийн шинжилгээний ажлыг RNN ашиглан хэрэгжүүлэх боломжтой. Энэ нь текст ангилах асуудал тул RNN-ий "many to one" аргыг ашиглах болно. Энэ нь бидний өмнө ярьсан "many to many" RNN-тэй төстэй боловч нэг y гаралтыг гаргана.
 
Зураг 2.21 many to one RNN

x_i бүр нь текстийн нэг үгийг илэрхийлэх вектор байна. Гаралтын утга нь хоёр тооноос тогтох  вектор байх бөгөөд нэг нь эерэг, нөгөө нь сөрөг утгыг илэрхийлнэ.  Эерэг, сөрөг утгыг тодорхойлохдоо Softmax функцийг ашигладаг. 
import numpy as np
def softmax(xs):
    return np.exp(xs) / sum(np.exp(xs))
xs = np.array([-1, 0, 3, 5])
print(softmax(xs)) # [0.0021657, 0.00588697, 0.11824302, 0.87370431]

Энд RNN- г ашиглан сэтгэгдлийн шинжилгээ хийх дараалал, болон туршилтыг үзүүлье.

	Сан бүрдүүлэх
Сургалтын болон тестийн гэсэн 2 санг бэлтгэнэ.
train_data = {
  'сайн': True,
  'муу': False,
  . . . . . . . . . . .
}

test_data = {
  'Их баяртай байна': True,
  'Би сайн байна': True,
   . . . . . . . . . . .
}
	Үгийн санг үүсгэх
Сургалтын өгөгдлөөс үгийн санг үүсгэнэ.

from data import train_data, test_data
vocab = list(set([w for text in train_data.keys() for w in text.split(' ')]))
vocab_size = len(vocab)

	Үг бүрийг индекслэх
RNN үгийг ойлгохгүй учир үг бүрийг тоогоор илэрхийлэх хэрэгтэй байдаг. 

word_to_idx = { w: i for i, w in enumerate(vocab) }
idx_to_word = { i: w for i, w in enumerate(vocab) }

	Индексийн дараа вектороор илэрхийлэх
Индекс бүрт вектор харгалзуулна. Векторт шилжүүлэхдээ  ”one-hot vectors” буюу  компонентуудын нэгээс бусад бүгд тэгүүд байх аргыг ашигладаг.

 

import numpy as np

def createInputs(text):
  inputs = []
  for w in text.split(' '):
    v = np.zeros((vocab_size, 1))
    v[word_to_idx[w]] = 1
    inputs.append(v)
  return inputs


	Жин, биасыг тооцоолох (Forward step)
3 жин,  2 биасыг тооцоолно. 
import numpy as np
from numpy.random import randn

class RNN:
  #Recurrent Neural Network.

  def __init__(self, input_size, output_size, hidden_size=64):
    # Weights
    self.Whh = randn(hidden_size, hidden_size) / 1000
    self.Wxh = randn(hidden_size, input_size) / 1000
    self.Why = randn(output_size, hidden_size) / 1000

    # Biases
    self.bh = np.zeros((hidden_size, 1))
    self.by = np.zeros((output_size, 1))

                                   (2)
def forward(self, inputs):
    
    h = np.zeros((self.Whh.shape[0], 1))

    # Perform each step of the RNN
    for i, x in enumerate(inputs):
      h = np.tanh(self.Wxh @ x + self.Whh @ h + self.bh)

    # Compute the output
    y = self.Why @ h + self.by

    return y, h


def softmax(xs):
  # Applies the Softmax Function to the input array.
  return np.exp(xs) / sum(np.exp(xs))

# Initialize our RNN!
rnn = RNN(vocab_size, 2)

inputs = createInputs('i am very good')
out, h = rnn.forward(inputs)
probs = softmax(out)
   
 
Туршилт

        

Хавсралт
Сургалт болон тестийн өгөгдөл

train_data = {
  'сайн': True,
  'муу': False,
  'баяртай': True,
  'гунигтай': False,
  'сайн биш': False,
  'муу биш': True,
  'баяргүй': False,
  'уйтгаргүй': True,
  'маш сайн': True,
  'маш муу': False,
  'их баяртай': True,
  'их уйтгартай': False,
  'би баяртай байна': True,
  'энэ сайн': True,
  'би муу байна': False,
  'энэ муу': False,
  'би муу байна' : False,
  'энэ муу': False,
  'би баяргүй байна': False,
  'энэ сайн биш': False,
  'би муу биш': True,
  'энэ уйтгаргүй': True,
  'би их баяртай байна': True,
  'энэ маш сайн': True,
  'би маш муу байна': False,
  'энэ маш уйтгартай': False,
  'энэ маш баяртай байна': True,
  'би сайн муу биш': True,
  'энэ сайн муу биш': True,
  'би муу сайн биш': False,
  'би сайн баяртай байна': True,
  'энэ сайн биш баяргүй': False,
  'би огт сайн биш': False,
  'би огт муу биш': True,
  'би огт баяргүй': False,
  'энэ огт уйтгаргүй': True,
  'энэ огт баяргүй': False,
  'би яг одоо сайн байна': True,
  'би яг одоо муу байна': False,
  'энэ яг одоо муу байна': False,
  'би яг одоо уйтгартай байна': False,
  'би өмнө нь сайн байсан': True,
  'би өмнө нь баяртай байсан': True,
  'би өмнө нь муу байсан': False,
  'би өмнө нь гунигтай байсан': False,
  'би яг одоо маш муу байна': False , 
  'энэ одоо маш сайн байгаа': True,
  'Энэ одоо маш гунигтай': False,
  'өмнө нь муу байсан': True,
  'энэ өмнө нь маш сайн байсан': True,
  'өмнө нь маш муу байсан': False,
  'энэ өмнө маш их баяртай байсан': True,
  'өмнө нь маш гунигтай байсан': False,
  'би өмнө нь сайн байсан муу ч биш': True,
  'би өмнө нь сайн байгаагүй бас жаргалтай байгаагүй': False,
  'би яг одоо тийм ч муу эсвэл гунигтай биш байна': True,
  'би яг одоо сайн биш эсвэл аз жаргалтай биш байна': False,
  'энэ нь урьд өмнө аз жаргалгүй байсангүй': False,
}

test_data = {
  'энэ аз жаргалтай': True,
  'би сайн': True,
  'энэ аз жаргалтай биш': False,
  'би сайн биш': False,
  'энэ тийм ч муу биш': False,
  'би гунигтай биш': True,
  'би маш сайн': True,
  'энэ маш муу': False,
  'би маш их гунигтай байна': False,
  'энэ тийм ч сайн биш': False,
  'энэ сайн аз жаргалтай': True,
  'би сайн биш бас аз жаргалтай биш': False,
  'энэ тийм ч сайн биш': False,
  'Энэ тийм ч муу биш': True,
  'энэ одоо сайн': True,
  'Энэ яг одоо гунигтай': False,
  'одоо маш муу байна': False,
  'энэ өмнө нь сайн байсан': True,
  'би өмнө нь аз жаргалтай байгаагүй сайн байгаагүй': False,
}

Ашигласан материал

	https://towardsdatascience.com/machine-learning-for-beginners-an-introduction-to-neural-networks-d49f22d238f9
	https://victorzhou.com/tag/natural-language-processing/
	https://victorzhou.com/blog/softmax/
	https://victorzhou.com/blog/intro-to-cnns-part-1/


